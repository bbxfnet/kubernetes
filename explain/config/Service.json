{
  "apiVersion": {
    "info": "   apiVersion\t\u003cstring\u003e",
    "desc": "     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n"
  },
  "kind": {
    "info": "   kind\t\u003cstring\u003e",
    "desc": "     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n"
  },
  "metadata": {
    "info": "   metadata\t\u003cObject\u003e",
    "desc": "     Standard object\u0027s metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n",
    "child": {
      "annotations": {
        "info": "   annotations\t\u003cmap[string]string\u003e",
        "desc": "     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n"
      },
      "clusterName": {
        "info": "   clusterName\t\u003cstring\u003e",
        "desc": "     The name of the cluster which the object belongs to. This is used to\n     distinguish resources with same name and namespace in different clusters.\n     This field is not set anywhere right now and apiserver is going to ignore\n     it if set in create or update request.\n"
      },
      "creationTimestamp": {
        "info": "   creationTimestamp\t\u003cstring\u003e",
        "desc": "     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n"
      },
      "deletionGracePeriodSeconds": {
        "info": "   deletionGracePeriodSeconds\t\u003cinteger\u003e",
        "desc": "     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n"
      },
      "deletionTimestamp": {
        "info": "   deletionTimestamp\t\u003cstring\u003e",
        "desc": "     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n"
      },
      "finalizers": {
        "info": "   finalizers\t\u003c[]string\u003e",
        "desc": "     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n"
      },
      "generateName": {
        "info": "   generateName\t\u003cstring\u003e",
        "desc": "     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n     If this field is specified and the generated name exists, the server will\n     NOT return a 409 - instead, it will either return 201 Created or 500 with\n     Reason ServerTimeout indicating a unique name could not be found in the\n     time allotted, and the client should retry (optionally after the time\n     indicated in the Retry-After header).\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n"
      },
      "generation": {
        "info": "   generation\t\u003cinteger\u003e",
        "desc": "     Populated by the system. Read-only.\n"
      },
      "labels": {
        "info": "   labels\t\u003cmap[string]string\u003e",
        "desc": "     Map of string keys and values that can be used to organize and categorize\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n"
      },
      "managedFields": {
        "info": "   managedFields\t\u003c[]Object\u003e",
        "desc": "     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn\u0027t need to set or understand this field. A workflow\n     can be the user\u0027s name, a controller\u0027s name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n",
        "child": {
          "apiVersion": {
            "info": "   apiVersion\t\u003cstring\u003e",
            "desc": "     APIVersion defines the version of this resource that this field set applies\n     to. The format is \"group/version\" just like the top-level APIVersion field.\n     It is necessary to track the version of a field set because it cannot be\n     automatically converted.\n"
          },
          "fieldsType": {
            "info": "   fieldsType\t\u003cstring\u003e",
            "desc": "     FieldsType is the discriminator for the different fields format and\n     version. There is currently only one possible value: \"FieldsV1\"\n"
          },
          "fieldsV1": {
            "info": "   fieldsV1\t\u003cmap[string]\u003e",
            "desc": "     FieldsV1 holds the first JSON version format as described in the \"FieldsV1\"\n     type.\n"
          },
          "manager": {
            "info": "   manager\t\u003cstring\u003e",
            "desc": "     Manager is an identifier of the workflow managing these fields.\n"
          },
          "operation": {
            "info": "   operation\t\u003cstring\u003e",
            "desc": "     Operation is the type of operation which lead to this ManagedFieldsEntry\n     being created. The only valid values for this field are \u0027Apply\u0027 and\n"
          },
          "subresource": {
            "info": "   subresource\t\u003cstring\u003e",
            "desc": "     Subresource is the name of the subresource used to update that object, or\n     empty string if the object was updated through the main resource. The value\n     of this field is used to distinguish between managers, even if they share\n     the same name. For example, a status update will be distinct from a regular\n     update using the same manager name. Note that the APIVersion field is not\n     related to the Subresource field and it always corresponds to the version\n     of the main resource.\n"
          },
          "time": {
            "info": "   time\t\u003cstring\u003e",
            "desc": "     Time is timestamp of when these fields were set. It should always be empty\n     if Operation is \u0027Apply\u0027\n"
          }
        }
      },
      "name": {
        "info": "   name\t\u003cstring\u003e",
        "desc": "     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n"
      },
      "namespace": {
        "info": "   namespace\t\u003cstring\u003e",
        "desc": "     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n"
      },
      "ownerReferences": {
        "info": "   ownerReferences\t\u003c[]Object\u003e",
        "desc": "     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n",
        "child": {
          "apiVersion": {
            "info": "   apiVersion\t\u003cstring\u003e -required-",
            "desc": "     API version of the referent.\n"
          },
          "blockOwnerDeletion": {
            "info": "   blockOwnerDeletion\t\u003cboolean\u003e",
            "desc": "     If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the\n     owner cannot be deleted from the key-value store until this reference is\n     removed. Defaults to false. To set this field, a user needs \"delete\"\n     permission of the owner, otherwise 422 (Unprocessable Entity) will be\n     returned.\n"
          },
          "controller": {
            "info": "   controller\t\u003cboolean\u003e",
            "desc": "     If true, this reference points to the managing controller.\n"
          },
          "kind": {
            "info": "   kind\t\u003cstring\u003e -required-",
            "desc": "     Kind of the referent. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n"
          },
          "name": {
            "info": "   name\t\u003cstring\u003e -required-",
            "desc": "     Name of the referent. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#names\n"
          },
          "uid": {
            "info": "   uid\t\u003cstring\u003e -required-",
            "desc": "     UID of the referent. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n"
          }
        }
      },
      "resourceVersion": {
        "info": "   resourceVersion\t\u003cstring\u003e",
        "desc": "     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n"
      },
      "selfLink": {
        "info": "   selfLink\t\u003cstring\u003e",
        "desc": "     SelfLink is a URL representing this object. Populated by the system.\n     Read-only.\n     DEPRECATED Kubernetes will stop propagating this field in 1.20 release and\n     the field is planned to be removed in 1.21 release.\n"
      },
      "uid": {
        "info": "   uid\t\u003cstring\u003e",
        "desc": "     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n"
      }
    }
  },
  "spec": {
    "info": "   spec\t\u003cObject\u003e",
    "desc": "     Spec defines the behavior of a service.\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n",
    "child": {
      "allocateLoadBalancerNodePorts": {
        "info": "   allocateLoadBalancerNodePorts\t\u003cboolean\u003e",
        "desc": "     allocateLoadBalancerNodePorts defines if NodePorts will be automatically\n     allocated for services with type LoadBalancer. Default is \"true\". It may be\n     set to \"false\" if the cluster load-balancer does not rely on NodePorts. If\n     the caller requests specific NodePorts (by specifying a value), those\n     requests will be respected, regardless of this field. This field may only\n     be set for services with type LoadBalancer and will be cleared if the type\n     is changed to any other type. This field is beta-level and is only honored\n     by servers that enable the ServiceLBNodePortControl feature.\n"
      },
      "clusterIP": {
        "info": "   clusterIP\t\u003cstring\u003e",
        "desc": "     clusterIP is the IP address of the service and is usually assigned\n     randomly. If an address is specified manually, is in-range (as per system\n     configuration), and is not in use, it will be allocated to the service;\n     otherwise creation of the service will fail. This field may not be changed\n     through updates unless the type field is also being changed to ExternalName\n     from ExternalName (in which case this field may optionally be specified, as\n     describe above). Valid values are \"None\", empty string (\"\"), or a valid IP\n     address. Setting this to \"None\" makes a \"headless service\" (no virtual IP),\n     which is useful when direct endpoint connections are preferred and proxying\n     is not required. Only applies to types ClusterIP, NodePort, and\n     LoadBalancer. If this field is specified when creating a Service of type\n     ExternalName, creation will fail. This field will be wiped when updating a\n     Service to type ExternalName. More info:\n     https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n"
      },
      "clusterIPs": {
        "info": "   clusterIPs\t\u003c[]string\u003e",
        "desc": "     ClusterIPs is a list of IP addresses assigned to this service, and are\n     usually assigned randomly. If an address is specified manually, is in-range\n     the service; otherwise creation of the service will fail. This field may\n     not be changed through updates unless the type field is also being changed\n     to ExternalName (which requires this field to be empty) or the type field\n     is being changed from ExternalName (in which case this field may optionally\n     be specified, as describe above). Valid values are \"None\", empty string\n     service\" (no virtual IP), which is useful when direct endpoint connections\n     are preferred and proxying is not required. Only applies to types\n     ClusterIP, NodePort, and LoadBalancer. If this field is specified when\n     creating a Service of type ExternalName, creation will fail. This field\n     will be wiped when updating a Service to type ExternalName. If this field\n     is not specified, it will be initialized from the clusterIP field. If this\n     field is specified, clients must ensure that clusterIPs[0] and clusterIP\n     have the same value.\n     Unless the \"IPv6DualStack\" feature gate is enabled, this field is limited\n     to one value, which must be the same as the clusterIP field. If the feature\n     gate is enabled, this field may hold a maximum of two entries (dual-stack\n     IPs, in either order). These IPs must correspond to the values of the\n     ipFamilies field. Both clusterIPs and ipFamilies are governed by the\n     ipFamilyPolicy field. More info:\n     https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n"
      },
      "externalIPs": {
        "info": "   externalIPs\t\u003c[]string\u003e",
        "desc": "     externalIPs is a list of IP addresses for which nodes in the cluster will\n     also accept traffic for this service. These IPs are not managed by\n     Kubernetes. The user is responsible for ensuring that traffic arrives at a\n     node with this IP. A common example is external load-balancers that are not\n     part of the Kubernetes system.\n"
      },
      "externalName": {
        "info": "   externalName\t\u003cstring\u003e",
        "desc": "     externalName is the external reference that discovery mechanisms will\n     return as an alias for this service (e.g. a DNS CNAME record). No proxying\n     will be involved. Must be a lowercase RFC-1123 hostname\n"
      },
      "externalTrafficPolicy": {
        "info": "   externalTrafficPolicy\t\u003cstring\u003e",
        "desc": "     externalTrafficPolicy denotes if this Service desires to route external\n     traffic to node-local or cluster-wide endpoints. \"Local\" preserves the\n     client source IP and avoids a second hop for LoadBalancer and Nodeport type\n     services, but risks potentially imbalanced traffic spreading. \"Cluster\"\n     obscures the client source IP and may cause a second hop to another node,\n     but should have good overall load-spreading.\n"
      },
      "healthCheckNodePort": {
        "info": "   healthCheckNodePort\t\u003cinteger\u003e",
        "desc": "     healthCheckNodePort specifies the healthcheck nodePort for the service.\n     This only applies when type is set to LoadBalancer and\n     externalTrafficPolicy is set to Local. If a value is specified, is\n     in-range, and is not in use, it will be used. If not specified, a value\n     will be automatically allocated. External systems (e.g. load-balancers) can\n     use this port to determine if a given node holds endpoints for this service\n     or not. If this field is specified when creating a Service which does not\n     need it, creation will fail. This field will be wiped when updating a\n     Service to no longer need it (e.g. changing type).\n"
      },
      "internalTrafficPolicy": {
        "info": "   internalTrafficPolicy\t\u003cstring\u003e",
        "desc": "     InternalTrafficPolicy specifies if the cluster internal traffic should be\n     routed to all endpoints or node-local endpoints only. \"Cluster\" routes\n     internal traffic to a Service to all endpoints. \"Local\" routes traffic to\n     node-local endpoints only, traffic is dropped if no node-local endpoints\n     are ready. The default value is \"Cluster\".\n"
      },
      "ipFamilies": {
        "info": "   ipFamilies\t\u003c[]string\u003e",
        "desc": "     IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this\n     service, and is gated by the \"IPv6DualStack\" feature gate. This field is\n     usually assigned automatically based on cluster configuration and the\n     ipFamilyPolicy field. If this field is specified manually, the requested\n     family is available in the cluster, and ipFamilyPolicy allows it, it will\n     be used; otherwise creation of the service will fail. This field is\n     conditionally mutable: it allows for adding or removing a secondary IP\n     family, but it does not allow changing the primary IP family of the\n     Service. Valid values are \"IPv4\" and \"IPv6\". This field only applies to\n     Services of types ClusterIP, NodePort, and LoadBalancer, and does apply to\n     type ExternalName.\n     This field may hold a maximum of two entries (dual-stack families, in\n     either order). These families must correspond to the values of the\n     clusterIPs field, if specified. Both clusterIPs and ipFamilies are governed\n     by the ipFamilyPolicy field.\n"
      },
      "ipFamilyPolicy": {
        "info": "   ipFamilyPolicy\t\u003cstring\u003e",
        "desc": "     IPFamilyPolicy represents the dual-stack-ness requested or required by this\n     Service, and is gated by the \"IPv6DualStack\" feature gate. If there is no\n     value provided, then this field will be set to SingleStack. Services can be\n     dual-stack configured clusters or a single IP family on single-stack\n     clusters), or \"RequireDualStack\" (two IP families on dual-stack configured\n     clusters, otherwise fail). The ipFamilies and clusterIPs fields depend on\n     the value of this field. This field will be wiped when updating a service\n     to type ExternalName.\n"
      },
      "loadBalancerClass": {
        "info": "   loadBalancerClass\t\u003cstring\u003e",
        "desc": "     loadBalancerClass is the class of the load balancer implementation this\n     Service belongs to. If specified, the value of this field must be a\n     label-style identifier, with an optional prefix, e.g. \"internal-vip\" or\n     This field can only be set when the Service type is \u0027LoadBalancer\u0027. If not\n     set, the default load balancer implementation is used, today this is\n     typically done through the cloud provider integration, but should apply for\n     any default implementation. If set, it is assumed that a load balancer\n     implementation is watching for Services with a matching class. Any default\n     load balancer implementation (e.g. cloud providers) should ignore Services\n     that set this field. This field can only be set when creating or updating a\n     Service to type \u0027LoadBalancer\u0027. Once set, it can not be changed. This field\n     will be wiped when a service is updated to a non \u0027LoadBalancer\u0027 type.\n"
      },
      "loadBalancerIP": {
        "info": "   loadBalancerIP\t\u003cstring\u003e",
        "desc": "     Only applies to Service Type: LoadBalancer LoadBalancer will get created\n     with the IP specified in this field. This feature depends on whether the\n     underlying cloud-provider supports specifying the loadBalancerIP when a\n     load balancer is created. This field will be ignored if the cloud-provider\n     does not support the feature.\n"
      },
      "loadBalancerSourceRanges": {
        "info": "   loadBalancerSourceRanges\t\u003c[]string\u003e",
        "desc": "     If specified and supported by the platform, this will restrict traffic\n     through the cloud-provider load-balancer will be restricted to the\n     specified client IPs. This field will be ignored if the cloud-provider does\n     not support the feature.\" More info:\n     https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/\n"
      },
      "ports": {
        "info": "   ports\t\u003c[]Object\u003e",
        "desc": "     The list of ports that are exposed by this service. More info:\n     https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n",
        "child": {
          "appProtocol": {
            "info": "   appProtocol\t\u003cstring\u003e",
            "desc": "     The application protocol for this port. This field follows standard\n     Kubernetes label syntax. Un-prefixed names are reserved for IANA standard\n     service names (as per RFC-6335 and\n     http://www.iana.org/assignments/service-names). Non-standard protocols\n     should use prefixed names such as mycompany.com/my-custom-protocol.\n"
          },
          "name": {
            "info": "   name\t\u003cstring\u003e",
            "desc": "     The name of this port within the service. This must be a DNS_LABEL. All\n     ports within a ServiceSpec must have unique names. When considering the\n     endpoints for a Service, this must match the \u0027name\u0027 field in the\n     EndpointPort. Optional if only one ServicePort is defined on this service.\n"
          },
          "nodePort": {
            "info": "   nodePort\t\u003cinteger\u003e",
            "desc": "     The port on each node on which this service is exposed when type is\n     NodePort or LoadBalancer. Usually assigned by the system. If a value is\n     specified, in-range, and not in use it will be used, otherwise the\n     operation will fail. If not specified, a port will be allocated if this\n     Service requires one. If this field is specified when creating a Service\n     which does not need it, creation will fail. This field will be wiped when\n     updating a Service to no longer need it (e.g. changing type from NodePort\n     to ClusterIP). More info:\n     https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport\n"
          },
          "port": {
            "info": "   port\t\u003cinteger\u003e -required-",
            "desc": "     The port that will be exposed by this service.\n"
          },
          "protocol": {
            "info": "   protocol\t\u003cstring\u003e",
            "desc": "     The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\". Default\n     is TCP.\n"
          },
          "targetPort": {
            "info": "   targetPort\t\u003cstring\u003e",
            "desc": "     Number or name of the port to access on the pods targeted by the service.\n     Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If\n     this is a string, it will be looked up as a named port in the target Pod\u0027s\n     container ports. If this is not specified, the value of the \u0027port\u0027 field is\n     used (an identity map). This field is ignored for services with\n     clusterIP\u003dNone, and should be omitted or set equal to the \u0027port\u0027 field.\n     More info:\n     https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service\n"
          }
        }
      },
      "publishNotReadyAddresses": {
        "info": "   publishNotReadyAddresses\t\u003cboolean\u003e",
        "desc": "     publishNotReadyAddresses indicates that any agent which deals with\n     endpoints for this Service should disregard any indications of\n     ready/not-ready. The primary use case for setting this field is for a\n     StatefulSet\u0027s Headless Service to propagate SRV DNS records for its Pods\n     for the purpose of peer discovery. The Kubernetes controllers that generate\n     Endpoints and EndpointSlice resources for Services interpret this to mean\n     that all endpoints are considered \"ready\" even if the Pods themselves are\n     not. Agents which consume only Kubernetes generated endpoints through the\n     Endpoints or EndpointSlice resources can safely assume this behavior.\n"
      },
      "selector": {
        "info": "   selector\t\u003cmap[string]string\u003e",
        "desc": "     Route service traffic to pods with label keys and values matching this\n     selector. If empty or not present, the service is assumed to have an\n     external process managing its endpoints, which Kubernetes will not modify.\n     Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if\n     type is ExternalName. More info:\n     https://kubernetes.io/docs/concepts/services-networking/service/\n"
      },
      "sessionAffinity": {
        "info": "   sessionAffinity\t\u003cstring\u003e",
        "desc": "     Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable\n     client IP based session affinity. Must be ClientIP or None. Defaults to\n     None. More info:\n     https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n"
      },
      "sessionAffinityConfig": {
        "info": "   sessionAffinityConfig\t\u003cObject\u003e",
        "desc": "     sessionAffinityConfig contains the configurations of session affinity.\n",
        "child": {
          "clientIP": {
            "info": "   clientIP\t\u003cObject\u003e",
            "desc": "     clientIP contains the configurations of Client IP based session affinity.\n",
            "child": {
              "timeoutSeconds": {
                "info": "   timeoutSeconds\t\u003cinteger\u003e",
                "desc": "     timeoutSeconds specifies the seconds of ClientIP type session sticky time.\n     The value must be \u003e0 \u0026\u0026 \u003c\u003d86400(for 1 day) if ServiceAffinity \u003d\u003d\n"
              }
            }
          }
        }
      },
      "type": {
        "info": "   type\t\u003cstring\u003e",
        "desc": "     type determines how the Service is exposed. Defaults to ClusterIP. Valid\n     options are ExternalName, ClusterIP, NodePort, and LoadBalancer.\n     endpoints. Endpoints are determined by the selector or if that is not\n     specified, by manual construction of an Endpoints object or EndpointSlice\n     objects. If clusterIP is \"None\", no virtual IP is allocated and the\n     endpoints are published as a set of endpoints rather than a virtual IP.\n     routes to the same endpoints as the clusterIP. \"LoadBalancer\" builds on\n     NodePort and creates an external load-balancer (if supported in the current\n     cloud) which routes to the same endpoints as the clusterIP. \"ExternalName\"\n     aliases this service to the specified externalName. Several other fields do\n     not apply to ExternalName services. More info:\n     https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\n"
      }
    }
  },
  "status": {
    "info": "   status\t\u003cObject\u003e",
    "desc": "     Most recently observed status of the service. Populated by the system.\n     Read-only. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n",
    "child": {
      "conditions": {
        "info": "   conditions\t\u003c[]Object\u003e",
        "desc": "     Current service state\n",
        "child": {
          "lastTransitionTime": {
            "info": "   lastTransitionTime\t\u003cstring\u003e -required-",
            "desc": "     lastTransitionTime is the last time the condition transitioned from one\n     status to another. This should be when the underlying condition changed. If\n     that is not known, then using the time when the API field changed is\n     acceptable.\n"
          },
          "message": {
            "info": "   message\t\u003cstring\u003e -required-",
            "desc": "     message is a human readable message indicating details about the\n     transition. This may be an empty string.\n"
          },
          "observedGeneration": {
            "info": "   observedGeneration\t\u003cinteger\u003e",
            "desc": "     observedGeneration represents the .metadata.generation that the condition\n     was set based upon. For instance, if .metadata.generation is currently 12,\n     but the .status.conditions[x].observedGeneration is 9, the condition is out\n     of date with respect to the current state of the instance.\n"
          },
          "reason": {
            "info": "   reason\t\u003cstring\u003e -required-",
            "desc": "     reason contains a programmatic identifier indicating the reason for the\n     condition\u0027s last transition. Producers of specific condition types may\n     define expected values and meanings for this field, and whether the values\n     are considered a guaranteed API. The value should be a CamelCase string.\n     This field may not be empty.\n"
          },
          "status": {
            "info": "   status\t\u003cstring\u003e -required-",
            "desc": "     status of the condition, one of True, False, Unknown.\n"
          },
          "type": {
            "info": "   type\t\u003cstring\u003e -required-",
            "desc": "     type of condition in CamelCase or in foo.example.com/CamelCase.\n"
          }
        }
      },
      "loadBalancer": {
        "info": "   loadBalancer\t\u003cObject\u003e",
        "desc": "     LoadBalancer contains the current status of the load-balancer, if one is\n     present.\n",
        "child": {
          "ingress": {
            "info": "   ingress\t\u003c[]Object\u003e",
            "desc": "     Ingress is a list containing ingress points for the load-balancer. Traffic\n     intended for the service should be sent to these ingress points.\n",
            "child": {
              "hostname": {
                "info": "   hostname\t\u003cstring\u003e",
                "desc": "     Hostname is set for load-balancer ingress points that are DNS based\n"
              },
              "ip": {
                "info": "   ip\t\u003cstring\u003e",
                "desc": "     IP is set for load-balancer ingress points that are IP based (typically GCE\n     or OpenStack load-balancers)\n"
              },
              "ports": {
                "info": "   ports\t\u003c[]Object\u003e",
                "desc": "     Ports is a list of records of service ports If used, every port defined in\n     the service should have an entry in it\n",
                "child": {
                  "error": {
                    "info": "   error\t\u003cstring\u003e",
                    "desc": "     Error is to record the problem with the service port The format of the\n     error shall comply with the following rules: - built-in error values shall\n     be specified in this file and those shall use CamelCase names\n     format foo.example.com/CamelCase.\n"
                  },
                  "port": {
                    "info": "   port\t\u003cinteger\u003e -required-",
                    "desc": "     Port is the port number of the service port of which status is recorded\n     here\n"
                  },
                  "protocol": {
                    "info": "   protocol\t\u003cstring\u003e -required-",
                    "desc": "     Protocol is the protocol of the service port of which status is recorded\n     here The supported values are: \"TCP\", \"UDP\", \"SCTP\"\n"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}