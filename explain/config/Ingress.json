{
  "apiVersion": {
    "info": "   apiVersion\t\u003cstring\u003e",
    "desc": "     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n"
  },
  "kind": {
    "info": "   kind\t\u003cstring\u003e",
    "desc": "     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n"
  },
  "metadata": {
    "info": "   metadata\t\u003cObject\u003e",
    "desc": "     Standard object\u0027s metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n",
    "child": {
      "annotations": {
        "info": "   annotations\t\u003cmap[string]string\u003e",
        "desc": "     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n"
      },
      "clusterName": {
        "info": "   clusterName\t\u003cstring\u003e",
        "desc": "     The name of the cluster which the object belongs to. This is used to\n     distinguish resources with same name and namespace in different clusters.\n     This field is not set anywhere right now and apiserver is going to ignore\n     it if set in create or update request.\n"
      },
      "creationTimestamp": {
        "info": "   creationTimestamp\t\u003cstring\u003e",
        "desc": "     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n"
      },
      "deletionGracePeriodSeconds": {
        "info": "   deletionGracePeriodSeconds\t\u003cinteger\u003e",
        "desc": "     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n"
      },
      "deletionTimestamp": {
        "info": "   deletionTimestamp\t\u003cstring\u003e",
        "desc": "     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n"
      },
      "finalizers": {
        "info": "   finalizers\t\u003c[]string\u003e",
        "desc": "     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n"
      },
      "generateName": {
        "info": "   generateName\t\u003cstring\u003e",
        "desc": "     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n     If this field is specified and the generated name exists, the server will\n     NOT return a 409 - instead, it will either return 201 Created or 500 with\n     Reason ServerTimeout indicating a unique name could not be found in the\n     time allotted, and the client should retry (optionally after the time\n     indicated in the Retry-After header).\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n"
      },
      "generation": {
        "info": "   generation\t\u003cinteger\u003e",
        "desc": "     Populated by the system. Read-only.\n"
      },
      "labels": {
        "info": "   labels\t\u003cmap[string]string\u003e",
        "desc": "     Map of string keys and values that can be used to organize and categorize\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n"
      },
      "managedFields": {
        "info": "   managedFields\t\u003c[]Object\u003e",
        "desc": "     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn\u0027t need to set or understand this field. A workflow\n     can be the user\u0027s name, a controller\u0027s name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n",
        "child": {
          "apiVersion": {
            "info": "   apiVersion\t\u003cstring\u003e",
            "desc": "     APIVersion defines the version of this resource that this field set applies\n     to. The format is \"group/version\" just like the top-level APIVersion field.\n     It is necessary to track the version of a field set because it cannot be\n     automatically converted.\n"
          },
          "fieldsType": {
            "info": "   fieldsType\t\u003cstring\u003e",
            "desc": "     FieldsType is the discriminator for the different fields format and\n     version. There is currently only one possible value: \"FieldsV1\"\n"
          },
          "fieldsV1": {
            "info": "   fieldsV1\t\u003cmap[string]\u003e",
            "desc": "     FieldsV1 holds the first JSON version format as described in the \"FieldsV1\"\n     type.\n"
          },
          "manager": {
            "info": "   manager\t\u003cstring\u003e",
            "desc": "     Manager is an identifier of the workflow managing these fields.\n"
          },
          "operation": {
            "info": "   operation\t\u003cstring\u003e",
            "desc": "     Operation is the type of operation which lead to this ManagedFieldsEntry\n     being created. The only valid values for this field are \u0027Apply\u0027 and\n"
          },
          "subresource": {
            "info": "   subresource\t\u003cstring\u003e",
            "desc": "     Subresource is the name of the subresource used to update that object, or\n     empty string if the object was updated through the main resource. The value\n     of this field is used to distinguish between managers, even if they share\n     the same name. For example, a status update will be distinct from a regular\n     update using the same manager name. Note that the APIVersion field is not\n     related to the Subresource field and it always corresponds to the version\n     of the main resource.\n"
          },
          "time": {
            "info": "   time\t\u003cstring\u003e",
            "desc": "     Time is timestamp of when these fields were set. It should always be empty\n     if Operation is \u0027Apply\u0027\n"
          }
        }
      },
      "name": {
        "info": "   name\t\u003cstring\u003e",
        "desc": "     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n"
      },
      "namespace": {
        "info": "   namespace\t\u003cstring\u003e",
        "desc": "     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n"
      },
      "ownerReferences": {
        "info": "   ownerReferences\t\u003c[]Object\u003e",
        "desc": "     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n",
        "child": {
          "apiVersion": {
            "info": "   apiVersion\t\u003cstring\u003e -required-",
            "desc": "     API version of the referent.\n"
          },
          "blockOwnerDeletion": {
            "info": "   blockOwnerDeletion\t\u003cboolean\u003e",
            "desc": "     If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the\n     owner cannot be deleted from the key-value store until this reference is\n     removed. Defaults to false. To set this field, a user needs \"delete\"\n     permission of the owner, otherwise 422 (Unprocessable Entity) will be\n     returned.\n"
          },
          "controller": {
            "info": "   controller\t\u003cboolean\u003e",
            "desc": "     If true, this reference points to the managing controller.\n"
          },
          "kind": {
            "info": "   kind\t\u003cstring\u003e -required-",
            "desc": "     Kind of the referent. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n"
          },
          "name": {
            "info": "   name\t\u003cstring\u003e -required-",
            "desc": "     Name of the referent. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#names\n"
          },
          "uid": {
            "info": "   uid\t\u003cstring\u003e -required-",
            "desc": "     UID of the referent. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n"
          }
        }
      },
      "resourceVersion": {
        "info": "   resourceVersion\t\u003cstring\u003e",
        "desc": "     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n"
      },
      "selfLink": {
        "info": "   selfLink\t\u003cstring\u003e",
        "desc": "     SelfLink is a URL representing this object. Populated by the system.\n     Read-only.\n     DEPRECATED Kubernetes will stop propagating this field in 1.20 release and\n     the field is planned to be removed in 1.21 release.\n"
      },
      "uid": {
        "info": "   uid\t\u003cstring\u003e",
        "desc": "     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n"
      }
    }
  },
  "spec": {
    "info": "   spec\t\u003cObject\u003e",
    "desc": "     Spec is the desired state of the Ingress. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n",
    "child": {
      "defaultBackend": {
        "info": "   defaultBackend\t\u003cObject\u003e",
        "desc": "     DefaultBackend is the backend that should handle requests that don\u0027t match\n     any rule. If Rules are not specified, DefaultBackend must be specified. If\n     DefaultBackend is not set, the handling of requests that do not match any\n     of the rules will be up to the Ingress controller.\n",
        "child": {
          "resource": {
            "info": "   resource\t\u003cObject\u003e",
            "desc": "     Resource is an ObjectRef to another Kubernetes resource in the namespace of\n     the Ingress object. If resource is specified, a service.Name and\n     service.Port must not be specified. This is a mutually exclusive setting\n     with \"Service\".\n",
            "child": {
              "apiGroup": {
                "info": "   apiGroup\t\u003cstring\u003e",
                "desc": "     APIGroup is the group for the resource being referenced. If APIGroup is not\n     specified, the specified Kind must be in the core API group. For any other\n     third-party types, APIGroup is required.\n"
              },
              "kind": {
                "info": "   kind\t\u003cstring\u003e -required-",
                "desc": "     Kind is the type of resource being referenced\n"
              },
              "name": {
                "info": "   name\t\u003cstring\u003e -required-",
                "desc": "     Name is the name of resource being referenced\n"
              }
            }
          },
          "service": {
            "info": "   service\t\u003cObject\u003e",
            "desc": "     Service references a Service as a Backend. This is a mutually exclusive\n     setting with \"Resource\".\n",
            "child": {
              "name": {
                "info": "   name\t\u003cstring\u003e -required-",
                "desc": "     Name is the referenced service. The service must exist in the same\n     namespace as the Ingress object.\n"
              },
              "port": {
                "info": "   port\t\u003cObject\u003e",
                "desc": "     Port of the referenced service. A port name or port number is required for\n",
                "child": {
                  "name": {
                    "info": "   name\t\u003cstring\u003e",
                    "desc": "     Name is the name of the port on the Service. This is a mutually exclusive\n     setting with \"Number\".\n"
                  },
                  "number": {
                    "info": "   number\t\u003cinteger\u003e",
                    "desc": "     Number is the numerical port number (e.g. 80) on the Service. This is a\n     mutually exclusive setting with \"Name\".\n"
                  }
                }
              }
            }
          }
        }
      },
      "ingressClassName": {
        "info": "   ingressClassName\t\u003cstring\u003e",
        "desc": "     IngressClassName is the name of the IngressClass cluster resource. The\n     associated IngressClass defines which controller will implement the\n     resource. This replaces the deprecated `kubernetes.io/ingress.class`\n     annotation. For backwards compatibility, when that annotation is set, it\n     must be given precedence over this field. The controller may emit a warning\n     if the field and annotation have different values. Implementations of this\n     API should ignore Ingresses without a class specified. An IngressClass\n     resource may be marked as default, which can be used to set a default value\n     for this field. For more information, refer to the IngressClass\n     documentation.\n"
      },
      "rules": {
        "info": "   rules\t\u003c[]Object\u003e",
        "desc": "     rule matches, all traffic is sent to the default backend.\n",
        "child": {
          "host": {
            "info": "   host\t\u003cstring\u003e",
            "desc": "     Host is the fully qualified domain name of a network host, as defined by\n     RFC 3986. Note the following deviations from the \"host\" part of the URI as\n     defined in RFC 3986: 1. IPs are not allowed. Currently an IngressRuleValue\n     can only apply to the IP in the Spec of the parent Ingress.\n     Currently the port of an Ingress is implicitly :80 for http and :443 for\n     https. Both these may change in the future. Incoming requests are matched\n     against the host before the IngressRuleValue. If the host is unspecified,\n     the Ingress routes all traffic based on the specified IngressRuleValue.\n     Host can be \"precise\" which is a domain name without the terminating dot of\n     prefixed with a single wildcard label (e.g. \"*.foo.com\"). The wildcard\n     character \u0027*\u0027 must appear by itself as the first DNS label and matches only\n     header is equal to Host. 2. If Host is a wildcard, then the request matches\n     this rule if the http host header is to equal to the suffix (removing the\n     first label) of the wildcard rule.\n"
          },
          "http": {
            "info": "   http\t\u003cObject\u003e",
            "desc": "",
            "child": {
              "paths": {
                "info": "   paths\t\u003c[]Object\u003e -required-",
                "desc": "",
                "child": {
                  "backend": {
                    "info": "   backend\t\u003cObject\u003e -required-",
                    "desc": "     Backend defines the referenced service endpoint to which the traffic will\n     be forwarded to.\n",
                    "child": {
                      "resource": {
                        "info": "   resource\t\u003cObject\u003e",
                        "desc": "     Resource is an ObjectRef to another Kubernetes resource in the namespace of\n     the Ingress object. If resource is specified, a service.Name and\n     service.Port must not be specified. This is a mutually exclusive setting\n     with \"Service\".\n",
                        "child": {
                          "apiGroup": {
                            "info": "   apiGroup\t\u003cstring\u003e",
                            "desc": "     APIGroup is the group for the resource being referenced. If APIGroup is not\n     specified, the specified Kind must be in the core API group. For any other\n     third-party types, APIGroup is required.\n"
                          },
                          "kind": {
                            "info": "   kind\t\u003cstring\u003e -required-",
                            "desc": "     Kind is the type of resource being referenced\n"
                          },
                          "name": {
                            "info": "   name\t\u003cstring\u003e -required-",
                            "desc": "     Name is the name of resource being referenced\n"
                          }
                        }
                      },
                      "service": {
                        "info": "   service\t\u003cObject\u003e",
                        "desc": "     Service references a Service as a Backend. This is a mutually exclusive\n     setting with \"Resource\".\n",
                        "child": {
                          "name": {
                            "info": "   name\t\u003cstring\u003e -required-",
                            "desc": "     Name is the referenced service. The service must exist in the same\n     namespace as the Ingress object.\n"
                          },
                          "port": {
                            "info": "   port\t\u003cObject\u003e",
                            "desc": "     Port of the referenced service. A port name or port number is required for\n",
                            "child": {
                              "name": {
                                "info": "   name\t\u003cstring\u003e",
                                "desc": "     Name is the name of the port on the Service. This is a mutually exclusive\n     setting with \"Number\".\n"
                              },
                              "number": {
                                "info": "   number\t\u003cinteger\u003e",
                                "desc": "     Number is the numerical port number (e.g. 80) on the Service. This is a\n     mutually exclusive setting with \"Name\".\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "path": {
                    "info": "   path\t\u003cstring\u003e",
                    "desc": "     Path is matched against the path of an incoming request. Currently it can\n     contain characters disallowed from the conventional \"path\" part of a URL as\n     defined by RFC 3986. Paths must begin with a \u0027/\u0027 and must be present when\n     using PathType with value \"Exact\" or \"Prefix\".\n"
                  },
                  "pathType": {
                    "info": "   pathType\t\u003cstring\u003e -required-",
                    "desc": "     PathType determines the interpretation of the Path matching. PathType can\n     be one of the following values: * Exact: Matches the URL path exactly. *\n     Prefix: Matches based on a URL path prefix split by \u0027/\u0027. Matching is done\n     on a path element by element basis. A path element refers is the list of\n     labels in the path split by the \u0027/\u0027 separator. A request is a match for\n     path p if every p is an element-wise prefix of p of the request path. Note\n     that if the last element of the path is a substring of the last element in\n     request path, it is not a match (e.g. /foo/bar matches /foo/bar/baz, but\n     does not match /foo/barbaz).\n     IngressClass. Implementations can treat this as a separate PathType or\n     treat it identically to Prefix or Exact path types. Implementations are\n     required to support all path types.\n"
                  }
                }
              }
            }
          }
        }
      },
      "tls": {
        "info": "   tls\t\u003c[]Object\u003e",
        "desc": "     TLS configuration. Currently the Ingress only supports a single TLS port,\n     multiplexed on the same port according to the hostname specified through\n     the SNI TLS extension, if the ingress controller fulfilling the ingress\n     supports SNI.\n",
        "child": {
          "hosts": {
            "info": "   hosts\t\u003c[]string\u003e",
            "desc": "     Hosts are a list of hosts included in the TLS certificate. The values in\n     this list must match the name/s used in the tlsSecret. Defaults to the\n     wildcard host setting for the loadbalancer controller fulfilling this\n     Ingress, if left unspecified.\n"
          },
          "secretName": {
            "info": "   secretName\t\u003cstring\u003e",
            "desc": "     SecretName is the name of the secret used to terminate TLS traffic on port\n     alone. If the SNI host in a listener conflicts with the \"Host\" header field\n     used by an IngressRule, the SNI host is used for termination and value of\n     the Host header is used for routing.\n"
          }
        }
      }
    }
  },
  "status": {
    "info": "   status\t\u003cObject\u003e",
    "desc": "     Status is the current state of the Ingress. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status\n",
    "child": {
      "loadBalancer": {
        "info": "   loadBalancer\t\u003cObject\u003e",
        "desc": "     LoadBalancer contains the current status of the load-balancer.\n",
        "child": {
          "ingress": {
            "info": "   ingress\t\u003c[]Object\u003e",
            "desc": "     Ingress is a list containing ingress points for the load-balancer. Traffic\n     intended for the service should be sent to these ingress points.\n",
            "child": {
              "hostname": {
                "info": "   hostname\t\u003cstring\u003e",
                "desc": "     Hostname is set for load-balancer ingress points that are DNS based\n"
              },
              "ip": {
                "info": "   ip\t\u003cstring\u003e",
                "desc": "     IP is set for load-balancer ingress points that are IP based (typically GCE\n     or OpenStack load-balancers)\n"
              },
              "ports": {
                "info": "   ports\t\u003c[]Object\u003e",
                "desc": "     Ports is a list of records of service ports If used, every port defined in\n     the service should have an entry in it\n",
                "child": {
                  "error": {
                    "info": "   error\t\u003cstring\u003e",
                    "desc": "     Error is to record the problem with the service port The format of the\n     error shall comply with the following rules: - built-in error values shall\n     be specified in this file and those shall use CamelCase names\n     format foo.example.com/CamelCase.\n"
                  },
                  "port": {
                    "info": "   port\t\u003cinteger\u003e -required-",
                    "desc": "     Port is the port number of the service port of which status is recorded\n     here\n"
                  },
                  "protocol": {
                    "info": "   protocol\t\u003cstring\u003e -required-",
                    "desc": "     Protocol is the protocol of the service port of which status is recorded\n     here The supported values are: \"TCP\", \"UDP\", \"SCTP\"\n"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}